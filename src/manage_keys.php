<?php

	// CREATE A KEY
	// WILL BE SMTH LIKE 20181019_1231_HASH_SIGN 

	function create_key($userid)
	{
		// The key contains:
		//   - the current timestamp
		//   - a random uniqueid that identifies this conversation / file upload
		//   - a hash to authentify the key and link it to a user

		// The uniqueid 
		//   - will be used to identify the pictures sent by the recipient
		//   - and will be used in the P2P live video, as follows:
		//     - the master will be identified 	as [uuid]-0
		//     - and the recipient 		as [uuid]-1

		global $params;

		if ($params[$userid] == null) return '';

		$parts    = [];
	
		$parts[]  = date("YmdHi");
		$parts[]  = bin2hex(random_bytes(22));
		$parts[]  = my_hash($params[$userid]['secret'].$parts[0].$parts[1]);

		$key      = join('_', $parts);
		
		return $key;
	}

	function verify_key($key)
	{
		global $params;

		$aValid = ['_']; 
		if (!ctype_alnum(str_replace($aValid, '', $key)) ) 	return false;
		if ( (strlen($key) < 35) | (strlen($key) > 512) )	return false;

		$parts = explode('_', $key);

		$dt    = date_create_from_format('YmdHi', $parts[0]);
		if (time() - $dt->getTimestamp() > 3600 * 6) 		return false;				// max 6 hours ago

		$key_verified = false;
		foreach ($params as $userid => $user_params)
		{
			if (my_hash($user_params['secret'].$parts[0].$parts[1]) == $parts[2]) 	
			{
				$key_verified = true;
			}
		}
		if (!$key_verified) 
		{
			return false;										// the key should have been generated by the server
		}

		return true;
	}

	function get_user_from_key($key)
	{
		global $params;

		$parts = explode('_', $key);

		foreach ($params as $userid => $user_params)
		{
			if (my_hash($user_params['secret'].$parts[0].$parts[1]) == $parts[2]) 	
			{
				return $userid;
			}
		}
		return false;
	}

	function my_hash($txt)
	{
		return hash('sha256', $txt);
	}

	function validate_user($userid)
	{
		if (strlen($userid) > 512) 	return false;
		if (!ctype_alnum($userid)) 	return false;

		return true;
	}

?>
